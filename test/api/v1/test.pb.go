// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/v1/test.proto

package v1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The Foo message with Bar, Baz fields and a nested message Qux.
type Foo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bar           string                 `protobuf:"bytes,1,opt,name=bar,proto3" json:"bar,omitempty"` // Bar field
	Baz           string                 `protobuf:"bytes,2,opt,name=baz,proto3" json:"baz,omitempty"` // Baz field
	Qux           *Qux                   `protobuf:"bytes,3,opt,name=qux,proto3" json:"qux,omitempty"` // Qux is a nested message
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Foo) Reset() {
	*x = Foo{}
	mi := &file_api_v1_test_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Foo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Foo) ProtoMessage() {}

func (x *Foo) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_test_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Foo.ProtoReflect.Descriptor instead.
func (*Foo) Descriptor() ([]byte, []int) {
	return file_api_v1_test_proto_rawDescGZIP(), []int{0}
}

func (x *Foo) GetBar() string {
	if x != nil {
		return x.Bar
	}
	return ""
}

func (x *Foo) GetBaz() string {
	if x != nil {
		return x.Baz
	}
	return ""
}

func (x *Foo) GetQux() *Qux {
	if x != nil {
		return x.Qux
	}
	return nil
}

// The Qux message with Driver and Handle fields.
type Qux struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Driver        string                 `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"` // Driver field
	Handle        string                 `protobuf:"bytes,2,opt,name=handle,proto3" json:"handle,omitempty"` // Handle field
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Qux) Reset() {
	*x = Qux{}
	mi := &file_api_v1_test_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Qux) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qux) ProtoMessage() {}

func (x *Qux) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_test_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qux.ProtoReflect.Descriptor instead.
func (*Qux) Descriptor() ([]byte, []int) {
	return file_api_v1_test_proto_rawDescGZIP(), []int{1}
}

func (x *Qux) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Qux) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

var File_api_v1_test_proto protoreflect.FileDescriptor

const file_api_v1_test_proto_rawDesc = "" +
	"\n" +
	"\x11api/v1/test.proto\x12\x06api.v1\"H\n" +
	"\x03Foo\x12\x10\n" +
	"\x03bar\x18\x01 \x01(\tR\x03bar\x12\x10\n" +
	"\x03baz\x18\x02 \x01(\tR\x03baz\x12\x1d\n" +
	"\x03qux\x18\x03 \x01(\v2\v.api.v1.QuxR\x03qux\"5\n" +
	"\x03Qux\x12\x16\n" +
	"\x06driver\x18\x01 \x01(\tR\x06driver\x12\x16\n" +
	"\x06handle\x18\x02 \x01(\tR\x06handleB-Z+github.com/afritzler/protoequal/test/api/v1b\x06proto3"

var (
	file_api_v1_test_proto_rawDescOnce sync.Once
	file_api_v1_test_proto_rawDescData []byte
)

func file_api_v1_test_proto_rawDescGZIP() []byte {
	file_api_v1_test_proto_rawDescOnce.Do(func() {
		file_api_v1_test_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1_test_proto_rawDesc), len(file_api_v1_test_proto_rawDesc)))
	})
	return file_api_v1_test_proto_rawDescData
}

var file_api_v1_test_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_api_v1_test_proto_goTypes = []any{
	(*Foo)(nil), // 0: api.v1.Foo
	(*Qux)(nil), // 1: api.v1.Qux
}
var file_api_v1_test_proto_depIdxs = []int32{
	1, // 0: api.v1.Foo.qux:type_name -> api.v1.Qux
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_v1_test_proto_init() }
func file_api_v1_test_proto_init() {
	if File_api_v1_test_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_test_proto_rawDesc), len(file_api_v1_test_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1_test_proto_goTypes,
		DependencyIndexes: file_api_v1_test_proto_depIdxs,
		MessageInfos:      file_api_v1_test_proto_msgTypes,
	}.Build()
	File_api_v1_test_proto = out.File
	file_api_v1_test_proto_goTypes = nil
	file_api_v1_test_proto_depIdxs = nil
}
